{
  "total": 
  {
    "totalConfigutation":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(.*)(?=TOTAL)(TOTAL)(\\s+)(\\$?)(.*)(\\s+)(?=X{1,15}\\d{4})(X{1,15}\\d{4})(.*)",
        "match": 1,
        "group": 5
      },
      {
        "type": "json_path",
        "priority": 2,
        "value": "$.blocks[8]..paragraphs[3]..words[1].text"
      }
    ]
  }
  ,
  "subtotal": 
  {
    "subtotalConfigutation":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(.*)(?=SUBTOTAL)(SUBTOTAL)(\\s+)(\\$?)(.*)(\\s+)(?=GST/HST)(.*GST/HST.*)(.*)",
        "match": 1,
        "group": 5
      },
      {
        "type": "json_path",
        "priority": 2,
        "value": "$.blocks[8]..paragraphs[1]..words[0].text"
      }
    ]
  },
  "taxRate": 
  {
    "taxRateConfigutation":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(.*)(\\d\\d)(?=%)(%{1})(\\s+)(?=HST\\s+)(.*)",
        "match": 1,
        "group": 2
      }
    ]
  }
  ,
  "taxAmount": 
  {
    "taxAmountConfigutation":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(.*)(?=GST/HST)(GST/HST)(\\s+)(\\$?)(.*)(\\s+)(?=TOTAL)(TOTAL)(.*)",
        "match": 1,
        "group": 5
      },
      {
        "type": "json_path",
        "priority": 2,
        "value": "$.blocks[8]..paragraphs[2]..words[0].text"
      }
    ]
  }
  ,
  "store":
  {
    "nameConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)((home)(\\s+)(depot)|(homedepot))(?:.*)",
        "match": 1,
        "group": 1
      }
    ],
    "streetAddressConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)(?:\\s{1,})((\\d{1,}|\\d{1,}-\\d{1,})(.*)(?=\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b)(\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b))(?:.*)",
        "match": 1,
        "group": 1
      }
    ],
    "streetNumberConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)(?:\\s{1,})((\\d{1,}|\\d{1,}-\\d{1,})(.*)(?=\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b)(\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b))(?:.*)",
        "match": 1,
        "group": 2
      }
    ],
    "streetNameConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)(?:\\s{1,})((\\d{1,}|\\d{1,}-\\d{1,})(.*)(?=\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b)(\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b))(?:.*)",
        "match": 1,
        "group": 3
      }
    ],
    "cityConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)(?=\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b)(\\bavenue\\b|\\blane\\b|\\broad\\b|\\bboulevard\\b|\\bdrive\\b|\\bstreet\\b|\\bave\\b|\\bdr\\b|\\brd\\b|\\bblvd\\b|\\bln\\b|\\bst\\b|\\bpkwy\\b|\\bcircle\\b)(?:[\\s,]{1,})([^,]+)(?:[,]{1,})(?:.*)",
        "match": 1,
        "group": 2
      }
    ]
    ,
    "provinceConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)(\\bAB\\b|\\bBC\\b|\\bMB\\b|\\bN[BLTSU]\\b|\\bON\\b|\\bONT\\b|\\bPE\\b|\\bQC\\b|\\bSK\\b|\\bYT\\b)(?:.*)",
        "match": 1,
        "group": 1
      },
      {
        "type": "json_regex",
        "priority": 2,
        "value": "(?:.*)(\\bA[KLRZ]\\b|\\bC[AOT]\\b|\\bD[CE]\\b|\\bFL\\b|\\bGA\\b|\\bHI\\b|\\bI[ADLN]\\b|\\bK[SY]\\b|\\bLA\\b|\\bM[ADEINOST]\\b|\\bN[CDEHJMVY]\\b|\\bO[HKR]\\b|\\bP[AR]\\b|\\bRI\\b|\\bS[CD]\\b|\\bT[NX]\\b|\\bUT\\b|\\bV[AIT]\\b|\\bW[AIVY]\\b)(?:.*)",
        "match": 1,
        "group": 1
      }
    ]
    ,
    "postalCodeConfiguration":
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*)([ABCEGHJKLMNPRSTVXY][0-9][A-Z]\\s*[0-9][A-Z][0-9])(?:.*)",
        "match": 1,
        "group": 1
      },
      {
        "type": "json_regex",
        "priority": 2,
        "value": "(?:.*)([0-9]{5}(?:-[0-9]{4})?)(?:.*)",
        "match": 1,
        "group": 1
      }
    ]
  }
  ,
  "itemsData":
  {
    "itemsDetails": 
    [
      {
        "type": "json_regex",
        "priority": 1,
        "value": "(?:.*?)(\\d{12}[\\S\\s]*(?=<A>)<A>[\\S\\s]+(?=\\bSUBTOTAL\\b))(\\bSUBTOTAL\\b)(?:.*?)",
        "match": 0,
        "group": 1,
         
        "itemsParser":
        [
          {
            "priority": 1,
            "itemsDelimiter": "<A>",
            "itemsFieldsDelimiter": "[\\s]+",
            "itemsPricesDelimiter": "[\\s]+",
            "itemFieldsCount": 2,
            "itemCodeIndex": 0,
            "itemNameIndex": 1,
            "itemPriceIndex": -1,
            "itemQuantityIndex": -1
          }
        ]
      }
    ]
  }
  ,
  "purchaseDateTime": 
  {
    "purchaseDateTimeConfiguration": 
    [
      {
        "type": "json_regex",
        "priority": 1,
        "purchaseAMPM": "(1[012]|0[1-9]):([0-5][0-9])(\\s)?(am|pm|AM|PM)",
        "purchaseDate": "(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/([0-9]{4}|[0-9]{2})",
        "purchaseTime": "(1[012]|0[1-9]):([0-5][0-9])(\\s)?(am|pm|AM|PM)",
        "purchaseDateFormat": "dd/MM/yy hh:mm a",
        "purchaseDateDayGroup": 1,
        "purchaseDateDayMatch": 2,
        "purchaseDateYearGroup": 3,
        "purchaseDateYearMatch": 2,
        "purchaseTimeAMPMGroup": 4,
        "purchaseTimeAMPMMatch": 1,
        "purchaseTimeHourGroup": 1,
        "purchaseTimeHourMatch": 1,
        "purchaseDateMonthGroup": 2,
        "purchaseDateMonthMatch": 2,
        "purchaseTimeMinuteGroup": 2,
        "purchaseTimeMinuteMatch": 1
      },
      {
        "type": "json_path",
        "priority": 2,
        "purchaseAMPM": "$.blocks[4]..paragraphs[0]..words[1].text",
        "purchaseDate": "$.blocks[3]..paragraphs[0]..words[0].text",
        "purchaseTime": "$.blocks[4]..paragraphs[0]..words[0].text",
        "purchaseDateFormat": "dd/MM/yy hh:mm a"
      }
    ]
  }
}